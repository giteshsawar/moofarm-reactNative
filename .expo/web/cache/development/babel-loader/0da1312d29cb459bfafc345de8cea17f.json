{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gitesh/Projects/moofarm/app/components/GetOTP/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { screenWidth, screenHeight } from \"../../utils/common\";\nconsole.log(\"screenWidth\", screenWidth);\nimport GreenBackground from \"../../assets/images/green-background.jpg\";\nimport MobileIcon from \"../../assets/images/smartphone.png\";\nexport default function GetOTP() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var firstInput,\n      secondInput = useRef();\n\n  var focusInput = function focusInput(num) {\n    switch (num) {\n      case 1:\n        secondInput.current.focus();\n        break;\n\n      default:\n        firstInput.current.focus();\n        return;\n    }\n  };\n\n  var getKeyPressed = function getKeyPressed(e) {\n    var key = e.key,\n        target = e.target;\n    console.log('key pressed', e.key, e.target.value);\n    if (key === 'backspace' && !target.value.length) focusInput(Number(target.name));\n  };\n\n  var getTextInputValue = function getTextInputValue(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    var inputObj = {};\n    inputObj[name] = value;\n    console.log(\"targer el\", inputObj, inputValue);\n\n    if (!inputValue[name]) {\n      setInputValue(_objectSpread(_objectSpread({}, inputValue), inputObj));\n    } else {\n      inputValue[name] = value;\n    }\n\n    focusInput(Number(name));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.curvedContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(ImageBackground, {\n    style: styles.imageBackground,\n    source: GreenBackground,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.subContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: MobileIcon,\n    style: styles.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })))), React.createElement(View, {\n    style: styles.contentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.headingText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Phone number verification\"), React.createElement(Text, {\n    style: styles.subText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Please enter your mobile number to receive One Time Password\"), React.createElement(ImageBackground, {\n    source: GreenBackground,\n    style: {\n      height: 4,\n      backgroundColor: \"green\",\n      width: screenWidth / 4,\n      left: screenWidth / 2.65,\n      paddingTop: 10,\n      alignSelf: \"stretch\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 22,\n      paddingLeft: screenWidth / 98,\n      fontWeight: \"600\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"+91\"), React.createElement(TextInput, {\n    style: styles.textInput,\n    ref: firstInput,\n    onChange: getTextInputValue,\n    name: \"1\",\n    value: inputValue[1] || \"\",\n    maxLength: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    ref: secondInput,\n    onChange: getTextInputValue,\n    onKeyPress: getKeyPressed,\n    name: \"2\",\n    value: inputValue[2] || \"\",\n    maxLength: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    width: screenWidth,\n    overflow: \"hidden\"\n  },\n  imageBackground: {\n    width: screenWidth * 2,\n    height: screenHeight / 2,\n    zIndex: -1,\n    elevation: -1\n  },\n  image: {\n    width: 80,\n    height: 80,\n    top: screenHeight / 8,\n    right: screenWidth / 2,\n    bottom: 0\n  },\n  curvedContainer: {\n    overflow: \"hidden\",\n    borderBottomStartRadius: screenWidth * 2,\n    borderBottomRightRadius: screenWidth * 2,\n    right: screenWidth / 2,\n    top: -screenHeight / 4\n  },\n  subContainer: {\n    width: screenWidth * 2,\n    left: screenWidth / 2,\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  contentContainer: {\n    width: screenWidth,\n    top: -screenHeight / 6,\n    flex: 1,\n    alignItems: \"center\"\n  },\n  headingText: {\n    fontSize: 24,\n    lineHeight: 32\n  },\n  subText: {\n    padding: 20,\n    fontSize: 16,\n    textAlign: \"center\",\n    lineHeight: 24\n  },\n  inputContainer: {\n    width: screenWidth,\n    paddingTop: 20,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  textInput: {\n    height: 40,\n    borderBottomColor: \"gray\",\n    borderBottomWidth: 1,\n    width: screenWidth / 14,\n    margin: screenWidth / 98,\n    fontSize: 22,\n    fontWeight: \"600\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/gitesh/Projects/moofarm/app/components/GetOTP/index.js"],"names":["React","useState","useRef","screenWidth","screenHeight","console","log","GreenBackground","MobileIcon","GetOTP","inputValue","setInputValue","firstInput","secondInput","focusInput","num","current","focus","getKeyPressed","e","key","target","value","length","Number","name","getTextInputValue","inputObj","styles","container","curvedContainer","imageBackground","subContainer","image","contentContainer","headingText","subText","height","backgroundColor","width","left","paddingTop","alignSelf","inputContainer","fontSize","paddingLeft","fontWeight","textInput","StyleSheet","create","flex","alignItems","justifyContent","overflow","zIndex","elevation","top","right","bottom","borderBottomStartRadius","borderBottomRightRadius","lineHeight","padding","textAlign","display","flexDirection","borderBottomColor","borderBottomWidth","margin"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ImageBackground,\n  Image,\n  TextInput,\n} from \"react-native\";\n\nimport { screenWidth, screenHeight } from \"../../utils/common\";\nconsole.log(\"screenWidth\", screenWidth);\n\nimport GreenBackground from \"../../assets/images/green-background.jpg\";\nimport MobileIcon from \"../../assets/images/smartphone.png\";\n\nexport default function GetOTP() {\n  const [inputValue, setInputValue] = useState({});\n  var firstInput,\n    secondInput = useRef();\n  // const secondInput = useRef();\n\n  const focusInput = (num) => {\n    switch (num) {\n      case 1:\n        secondInput.current.focus();\n        break;\n      default:\n        firstInput.current.focus();\n        return;\n    }\n  };\n\n  const getKeyPressed = (e) => {\n    const { key, target } = e;\n    console.log('key pressed', e.key, e.target.value);\n\n    if (key === 'backspace' && !target.value.length) focusInput(Number(target.name)); \n  };\n\n  const getTextInputValue = (e) => {\n    const { name, value } = e.target;\n    const inputObj = {};\n    inputObj[name] = value;\n    console.log(\"targer el\", inputObj, inputValue);\n    if (!inputValue[name]) {\n      setInputValue({ ...inputValue, ...inputObj });\n    } else {\n      inputValue[name] = value;\n    }\n    focusInput(Number(name));\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.curvedContainer}>\n        <ImageBackground\n          style={styles.imageBackground}\n          source={GreenBackground}\n        >\n          <View style={styles.subContainer}>\n            <Image source={MobileIcon} style={styles.image} />\n          </View>\n        </ImageBackground>\n      </View>\n      <View style={styles.contentContainer}>\n        <Text style={styles.headingText}>Phone number verification</Text>\n        <Text style={styles.subText}>\n          Please enter your mobile number to receive One Time Password\n        </Text>\n        <ImageBackground\n          source={GreenBackground}\n          style={{\n            height: 4,\n            backgroundColor: \"green\",\n            width: screenWidth / 4,\n            left: screenWidth / 2.65,\n            paddingTop: 10,\n            alignSelf: \"stretch\",\n          }}\n        />\n        <View style={styles.inputContainer}>\n          <Text\n            style={{\n              fontSize: 22,\n              paddingLeft: screenWidth / 98,\n              fontWeight: \"600\",\n            }}\n          >\n            +91\n          </Text>\n          <TextInput\n            style={styles.textInput}\n            ref={firstInput}\n            onChange={getTextInputValue}\n            name=\"1\"\n            value={inputValue[1] || \"\"}\n            maxLength={1}\n          />\n          <TextInput\n            style={styles.textInput}\n            ref={secondInput}\n            onChange={getTextInputValue}\n            onKeyPress={getKeyPressed}\n            name=\"2\"\n            value={inputValue[2] || \"\"}\n            maxLength={2}\n          />\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    width: screenWidth,\n    overflow: \"hidden\",\n  },\n  imageBackground: {\n    width: screenWidth * 2,\n    height: screenHeight / 2,\n    zIndex: -1,\n    elevation: -1,\n  },\n  image: {\n    width: 80,\n    height: 80,\n    top: screenHeight / 8,\n    right: screenWidth / 2,\n    bottom: 0,\n  },\n  curvedContainer: {\n    overflow: \"hidden\",\n    borderBottomStartRadius: screenWidth * 2,\n    borderBottomRightRadius: screenWidth * 2,\n    right: screenWidth / 2,\n    top: -screenHeight / 4,\n  },\n  subContainer: {\n    width: screenWidth * 2,\n    left: screenWidth / 2,\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  contentContainer: {\n    width: screenWidth,\n    top: -screenHeight / 6,\n    flex: 1,\n    alignItems: \"center\",\n  },\n  headingText: {\n    fontSize: 24,\n    lineHeight: 32,\n  },\n  subText: {\n    padding: 20,\n    fontSize: 16,\n    textAlign: \"center\",\n    lineHeight: 24,\n  },\n  inputContainer: {\n    width: screenWidth,\n    paddingTop: 20,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  textInput: {\n    height: 40,\n    borderBottomColor: \"gray\",\n    borderBottomWidth: 1,\n    width: screenWidth / 14,\n    margin: screenWidth / 98,\n    fontSize: 22,\n    fontWeight: \"600\",\n    textAlign: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}