{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/gitesh/Projects/moofarm/app/components/GetOTP/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { screenWidth, screenHeight } from \"../../utils/common\";\nimport AutoFocusInput from \"../AutoFocusInput\";\nimport GreenBackground from \"../../assets/images/green-background.jpg\";\nimport MobileIcon from \"../../assets/images/smartphone.png\";\n\nvar GetOTP = function (_React$Component) {\n  _inherits(GetOTP, _React$Component);\n\n  var _super = _createSuper(GetOTP);\n\n  function GetOTP(props) {\n    var _this;\n\n    _classCallCheck(this, GetOTP);\n\n    _this = _super.call(this, props);\n\n    _this.setInputValue = function (inputs) {\n      _this.setState({\n        inputValues: inputs\n      });\n    };\n\n    _this.toggleInputError = function (errors) {\n      _this.setState({\n        errorInputs: err\n      });\n    };\n\n    _this.SubmitPhone = function () {\n      console.log(\"phoen no. submit\", inputValues);\n\n      for (var i = 1, x = 10; i <= x; i++) {\n        var num = i.toString();\n        console.log(\"dgiit submit\", !inputValues[num], num);\n\n        if (!inputValues[num]) {\n          errorInputs[num] = true;\n          toggleInputError(errorInputs);\n        }\n      }\n    };\n\n    _this.state = {\n      inputValues: {},\n      errorInputs: {}\n    };\n\n    var _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        _inputValues = _useState2[0],\n        setInputValue = _useState2[1];\n\n    var _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        _errorInputs = _useState4[0],\n        _toggleInputError = _useState4[1];\n\n    return _this;\n  }\n\n  _createClass(GetOTP, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.curvedContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, React.createElement(ImageBackground, {\n        style: styles.imageBackground,\n        source: GreenBackground,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.subContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: MobileIcon,\n        style: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      })))), React.createElement(View, {\n        style: styles.contentContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.headingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, \"Phone number verification\"), React.createElement(Text, {\n        style: styles.subText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, \"Please enter your mobile number to receive One Time Password\"), React.createElement(ImageBackground, {\n        source: GreenBackground,\n        style: {\n          height: 4,\n          backgroundColor: \"green\",\n          width: screenWidth / 4,\n          left: screenWidth / 2.65,\n          paddingTop: 10,\n          alignSelf: \"stretch\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }), React.createElement(AutoFocusInput, {\n        inputValues: inputValues,\n        setInputValue: setInputValue,\n        errorInputs: errorInputs,\n        toggleInputError: toggleInputError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }), React.createElement(LinearGradient, {\n        colors: [\"#56A548\", \"#69B844\"],\n        style: styles.touchBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: SubmitPhone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.submitBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, \"send otp\")))));\n    }\n  }]);\n\n  return GetOTP;\n}(React.Component);\n\nexport { GetOTP as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    width: screenWidth,\n    overflow: \"hidden\"\n  },\n  imageBackground: {\n    width: screenWidth * 2,\n    height: screenHeight / 2,\n    zIndex: -1,\n    elevation: -1\n  },\n  image: {\n    width: 80,\n    height: 80,\n    top: screenHeight / 8,\n    right: screenWidth / 2,\n    bottom: 0\n  },\n  curvedContainer: {\n    overflow: \"hidden\",\n    borderBottomStartRadius: screenWidth * 2,\n    borderBottomRightRadius: screenWidth * 2,\n    right: screenWidth / 2,\n    top: -screenHeight / 4\n  },\n  subContainer: {\n    width: screenWidth * 2,\n    left: screenWidth / 2,\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  contentContainer: {\n    width: screenWidth,\n    top: -screenHeight / 6,\n    flex: 1,\n    alignItems: \"center\"\n  },\n  headingText: {\n    fontSize: 24,\n    lineHeight: 32\n  },\n  subText: {\n    padding: 20,\n    fontSize: 16,\n    textAlign: \"center\",\n    lineHeight: 24\n  },\n  touchBtn: {\n    shadowColor: \"#470000\",\n    shadowOffset: {\n      width: 2,\n      height: 4\n    },\n    shadowOpacity: 0.1,\n    paddingVertical: 20,\n    width: screenWidth - screenWidth / 14,\n    marginTop: 20,\n    borderRadius: 40\n  },\n  submitBtn: {\n    textTransform: \"uppercase\",\n    fontSize: 18,\n    textAlign: \"center\",\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["/home/gitesh/Projects/moofarm/app/components/GetOTP/index.js"],"names":["React","LinearGradient","screenWidth","screenHeight","AutoFocusInput","GreenBackground","MobileIcon","GetOTP","props","setInputValue","inputs","setState","inputValues","toggleInputError","errors","errorInputs","err","SubmitPhone","console","log","i","x","num","toString","state","useState","styles","container","curvedContainer","imageBackground","subContainer","image","contentContainer","headingText","subText","height","backgroundColor","width","left","paddingTop","alignSelf","touchBtn","submitBtn","Component","StyleSheet","create","flex","alignItems","justifyContent","overflow","zIndex","elevation","top","right","bottom","borderBottomStartRadius","borderBottomRightRadius","fontSize","lineHeight","padding","textAlign","shadowColor","shadowOffset","shadowOpacity","paddingVertical","marginTop","borderRadius","textTransform","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ImageBackground,\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nimport { screenWidth, screenHeight } from \"../../utils/common\";\n\nimport AutoFocusInput from \"../AutoFocusInput\";\n\nimport GreenBackground from \"../../assets/images/green-background.jpg\";\nimport MobileIcon from \"../../assets/images/smartphone.png\";\n\nexport default class GetOTP extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValues: {},\n      errorInputs: {}\n    };\n    const [inputValues, setInputValue] = useState({});\n    const [errorInputs, toggleInputError] = useState({});\n  }\n\n  setInputValue = (inputs) => {\n    this.setState({ inputValues: inputs });\n  };\n\n  toggleInputError = errors => {\n    this.setState({ errorInputs: err })\n  };\n\n  SubmitPhone = () => {\n    console.log(\"phoen no. submit\", inputValues);\n    for (let i = 1, x = 10; i <= x; i++) {\n      const num = i.toString();\n      console.log(\"dgiit submit\", !inputValues[num], num);\n      if (!inputValues[num]) {\n        errorInputs[num] = true;\n        toggleInputError(errorInputs);\n      }\n    }\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={styles.curvedContainer}>\n          <ImageBackground\n            style={styles.imageBackground}\n            source={GreenBackground}\n          >\n            <View style={styles.subContainer}>\n              <Image source={MobileIcon} style={styles.image} />\n            </View>\n          </ImageBackground>\n        </View>\n        <View style={styles.contentContainer}>\n          <Text style={styles.headingText}>Phone number verification</Text>\n          <Text style={styles.subText}>\n            Please enter your mobile number to receive One Time Password\n          </Text>\n          <ImageBackground\n            source={GreenBackground}\n            style={{\n              height: 4,\n              backgroundColor: \"green\",\n              width: screenWidth / 4,\n              left: screenWidth / 2.65,\n              paddingTop: 10,\n              alignSelf: \"stretch\",\n            }}\n          />\n          <AutoFocusInput\n            inputValues={inputValues}\n            setInputValue={setInputValue}\n            errorInputs={errorInputs}\n            toggleInputError={toggleInputError}\n          />\n          <LinearGradient\n            colors={[\"#56A548\", \"#69B844\"]}\n            style={styles.touchBtn}\n          >\n            <TouchableOpacity onPress={SubmitPhone}>\n              <Text style={styles.submitBtn}>send otp</Text>\n            </TouchableOpacity>\n          </LinearGradient>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    width: screenWidth,\n    overflow: \"hidden\",\n  },\n  imageBackground: {\n    width: screenWidth * 2,\n    height: screenHeight / 2,\n    zIndex: -1,\n    elevation: -1,\n  },\n  image: {\n    width: 80,\n    height: 80,\n    top: screenHeight / 8,\n    right: screenWidth / 2,\n    bottom: 0,\n  },\n  curvedContainer: {\n    overflow: \"hidden\",\n    borderBottomStartRadius: screenWidth * 2,\n    borderBottomRightRadius: screenWidth * 2,\n    right: screenWidth / 2,\n    top: -screenHeight / 4,\n  },\n  subContainer: {\n    width: screenWidth * 2,\n    left: screenWidth / 2,\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  contentContainer: {\n    width: screenWidth,\n    top: -screenHeight / 6,\n    flex: 1,\n    alignItems: \"center\",\n  },\n  headingText: {\n    fontSize: 24,\n    lineHeight: 32,\n  },\n  subText: {\n    padding: 20,\n    fontSize: 16,\n    textAlign: \"center\",\n    lineHeight: 24,\n  },\n  touchBtn: {\n    shadowColor: \"#470000\",\n    shadowOffset: { width: 2, height: 4 },\n    shadowOpacity: 0.1,\n    paddingVertical: 20,\n    width: screenWidth - screenWidth / 14,\n    marginTop: 20,\n    borderRadius: 40,\n  },\n  submitBtn: {\n    textTransform: \"uppercase\",\n    fontSize: 18,\n    textAlign: \"center\",\n    color: \"white\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}