{"ast":null,"code":"var _jsxFileName = \"/home/gitesh/Projects/moofarm/app/components/OTPInput/index.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { screenWidth } from \"../../utils/common\";\nexport default function PhoneInput(props) {\n  var inputValues = props.inputValues,\n      setInputValue = props.setInputValue,\n      toggleInputError = props.toggleInputError,\n      errorInputs = props.errorInputs;\n  var firstInput = useRef();\n  var secondInput = useRef();\n  var thirdInput = useRef();\n  var fourthInput = useRef();\n\n  var focusInput = function focusInput(name) {\n    switch (name) {\n      case 1:\n        return secondInput.current.focus();\n\n      case 2:\n        return thirdInput.current.focus();\n\n      case 3:\n        return fourthInput.current.focus();\n\n      default:\n        return firstInput.current.focus();\n    }\n  };\n\n  var inputKeyPressed = function inputKeyPressed(e, name) {\n    var keyCode = e.nativeEvent.key.toLowerCase();\n    var value = inputValues[name] || \"\";\n    console.log(\"input key pressed\", name, value, keyCode);\n\n    if (keyCode === \"backspace\" || keyCode === \"enter\") {\n      if (!value.length) {\n        focusInput(Number(name) - 2);\n      }\n\n      keyCode = \"\";\n    } else {\n      setTimeout(function () {\n        focusInput(Number(name));\n        errorInputs[name] = false;\n        toggleInputError(errorInputs);\n      }, 200);\n    }\n\n    inputValues[name] = keyCode;\n    setInputValue(inputValues);\n  };\n\n  console.log('all errro inputs', errorInputs);\n  return React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: [styles.textInput, errorInputs[\"1\"] ? styles.errorInput : null],\n    onKeyPress: function onKeyPress(e) {\n      return inputKeyPressed(e, \"1\");\n    },\n    value: inputValues[\"1\"],\n    maxLength: 1,\n    ref: firstInput,\n    name: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: [styles.textInput, errorInputs[\"2\"] ? styles.errorInput : null],\n    onKeyPress: function onKeyPress(e) {\n      return inputKeyPressed(e, \"2\");\n    },\n    value: inputValues[\"2\"],\n    maxLength: 1,\n    ref: secondInput,\n    name: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: [styles.textInput, errorInputs[\"3\"] ? styles.errorInput : null],\n    onKeyPress: function onKeyPress(e) {\n      return inputKeyPressed(e, \"3\");\n    },\n    value: inputValues[\"3\"],\n    maxLength: 1,\n    ref: thirdInput,\n    name: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: [styles.textInput, errorInputs[\"4\"] ? styles.errorInput : null],\n    value: inputValues[\"4\"],\n    maxLength: 1,\n    onKeyPress: function onKeyPress(e) {\n      return inputKeyPressed(e, \"4\");\n    },\n    ref: fourthInput,\n    name: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  inputContainer: {\n    width: screenWidth,\n    paddingTop: 20,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  textInput: {\n    height: 40,\n    borderWidth: 2,\n    borderColor: \"gray\",\n    margin: 10,\n    fontSize: 22,\n    fontWeight: \"600\",\n    width: 60,\n    height: 60,\n    backgroundColor: \"#F8F8F8\",\n    textAlign: \"center\",\n    paddingVertical: 20,\n    borderRadius: 8\n  },\n  errorInput: {\n    borderColor: \"red\"\n  }\n});","map":{"version":3,"sources":["/home/gitesh/Projects/moofarm/app/components/OTPInput/index.js"],"names":["React","useEffect","useRef","screenWidth","PhoneInput","props","inputValues","setInputValue","toggleInputError","errorInputs","firstInput","secondInput","thirdInput","fourthInput","focusInput","name","current","focus","inputKeyPressed","e","keyCode","nativeEvent","key","toLowerCase","value","console","log","length","Number","setTimeout","styles","inputContainer","textInput","errorInput","StyleSheet","create","width","paddingTop","display","flexDirection","alignItems","justifyContent","height","borderWidth","borderColor","margin","fontSize","fontWeight","backgroundColor","textAlign","paddingVertical","borderRadius"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { View, TextInput, StyleSheet, Text } from \"react-native\";\n\nimport { screenWidth } from \"../../utils/common\";\n\nexport default function PhoneInput(props) {\n  const { inputValues, setInputValue, toggleInputError, errorInputs } = props;\n  const firstInput = useRef();\n  const secondInput = useRef();\n  const thirdInput = useRef();\n  const fourthInput = useRef();\n\n  const focusInput = (name) => {\n    switch (name) {\n      case 1:\n        return secondInput.current.focus();\n      case 2:\n        return thirdInput.current.focus();\n      case 3:\n        return fourthInput.current.focus();\n      default:\n        return firstInput.current.focus();\n    }\n  };\n\n  const inputKeyPressed = (e, name) => {\n    let keyCode = e.nativeEvent.key.toLowerCase();\n    const value = inputValues[name] || \"\";\n    console.log(\"input key pressed\", name, value, keyCode);\n    if (keyCode === \"backspace\" || keyCode === \"enter\") {\n      if (!value.length) {\n        focusInput(Number(name) - 2);\n      }\n      keyCode = \"\";\n    } else {\n      setTimeout(() => {\n        focusInput(Number(name));\n        errorInputs[name] = false;\n        toggleInputError(errorInputs);\n      }, 200);\n    }\n\n    inputValues[name] = keyCode;\n    setInputValue(inputValues);\n  };\n\n  console.log('all errro inputs', errorInputs);\n\n  return (\n    <View style={styles.inputContainer}>\n      <TextInput\n        style={[styles.textInput, errorInputs[\"1\"] ? styles.errorInput : null]}\n        onKeyPress={(e) => inputKeyPressed(e, \"1\")}\n        value={inputValues[\"1\"]}\n        maxLength={1}\n        ref={firstInput}\n        name=\"1\"\n      />\n      <TextInput\n        style={[styles.textInput, errorInputs[\"2\"] ? styles.errorInput : null]}\n        onKeyPress={(e) => inputKeyPressed(e, \"2\")}\n        value={inputValues[\"2\"]}\n        maxLength={1}\n        ref={secondInput}\n        name=\"2\"\n      />\n      <TextInput\n        style={[styles.textInput, errorInputs[\"3\"] ? styles.errorInput : null]}\n        onKeyPress={(e) => inputKeyPressed(e, \"3\")}\n        value={inputValues[\"3\"]}\n        maxLength={1}\n        ref={thirdInput}\n        name=\"3\"\n      />\n      <TextInput\n        style={[styles.textInput, errorInputs[\"4\"] ? styles.errorInput : null]}\n        value={inputValues[\"4\"]}\n        maxLength={1}\n        onKeyPress={(e) => inputKeyPressed(e, \"4\")}\n        ref={fourthInput}\n        name=\"4\"\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    width: screenWidth,\n    paddingTop: 20,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  textInput: {\n    height: 40,\n    borderWidth: 2,\n    borderColor: \"gray\",\n    margin: 10,\n    fontSize: 22,\n    fontWeight: \"600\",\n    width: 60,\n    height: 60,\n    backgroundColor: \"#F8F8F8\",\n    textAlign: \"center\",\n    paddingVertical: 20,\n    borderRadius: 8\n  },\n  errorInput: {\n      borderColor: \"red\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}