{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gitesh/Projects/moofarm/app/components/GetOTP/index.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { screenWidth, screenHeight } from \"../../utils/common\";\nconsole.log(\"screenWidth\", screenWidth);\nimport GreenBackground from \"../../assets/images/green-background.jpg\";\nimport MobileIcon from \"../../assets/images/smartphone.png\";\nexport default function GetOTP() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  getTextInputValue = function getTextInputValue(e, value) {\n    var name = e.target.name;\n    var inputObj = {};\n    inputObj[name] = value;\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.curvedContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(ImageBackground, {\n    style: styles.imageBackground,\n    source: GreenBackground,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.subContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: MobileIcon,\n    style: styles.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  })))), React.createElement(View, {\n    style: styles.contentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.headingText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Phone number verification\"), React.createElement(Text, {\n    style: styles.subText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Please enter your mobile number to receive One Time Password\"), React.createElement(ImageBackground, {\n    source: GreenBackground,\n    style: {\n      height: 4,\n      backgroundColor: \"green\",\n      width: screenWidth / 4,\n      left: screenWidth / 2.65,\n      paddingTop: 10,\n      alignSelf: \"stretch\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(e, text) {\n      return getTextInputValue(e, text);\n    },\n    name: \"1\",\n    value: inputValue[1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    width: screenWidth,\n    overflow: \"hidden\"\n  },\n  imageBackground: {\n    width: screenWidth * 2,\n    height: screenHeight / 2,\n    zIndex: -1,\n    elevation: -1\n  },\n  image: {\n    width: 80,\n    height: 80,\n    top: screenHeight / 8,\n    right: screenWidth / 2,\n    bottom: 0\n  },\n  curvedContainer: {\n    overflow: \"hidden\",\n    borderBottomStartRadius: screenWidth * 2,\n    borderBottomRightRadius: screenWidth * 2,\n    right: screenWidth / 2,\n    top: -screenHeight / 4\n  },\n  subContainer: {\n    width: screenWidth * 2,\n    left: screenWidth / 2,\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  contentContainer: {\n    width: screenWidth,\n    color: \"black\",\n    top: -screenHeight / 6,\n    flex: 1,\n    alignItems: \"center\"\n  },\n  headingText: {\n    fontSize: 24,\n    lineHeight: 32\n  },\n  subText: {\n    padding: 20,\n    fontSize: 16,\n    textAlign: \"center\",\n    lineHeight: 24\n  },\n  inputContainer: {\n    width: screenWidth,\n    paddingTop: 20\n  },\n  textInput: {\n    height: 40,\n    borderBottomColor: \"gray\",\n    borderBottomWidth: 1,\n    width: screenWidth / 14,\n    margin: screenWidth / 98\n  }\n});","map":{"version":3,"sources":["/home/gitesh/Projects/moofarm/app/components/GetOTP/index.js"],"names":["React","useState","screenWidth","screenHeight","console","log","GreenBackground","MobileIcon","GetOTP","inputValue","setInputValue","getTextInputValue","e","value","name","target","inputObj","styles","container","curvedContainer","imageBackground","subContainer","image","contentContainer","headingText","subText","height","backgroundColor","width","left","paddingTop","alignSelf","inputContainer","textInput","text","StyleSheet","create","flex","alignItems","justifyContent","overflow","zIndex","elevation","top","right","bottom","borderBottomStartRadius","borderBottomRightRadius","color","fontSize","lineHeight","padding","textAlign","borderBottomColor","borderBottomWidth","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ImageBackground,\n  Image,\n  TextInput,\n} from \"react-native\";\n\nimport { screenWidth, screenHeight } from \"../../utils/common\";\nconsole.log(\"screenWidth\", screenWidth);\n\nimport GreenBackground from \"../../assets/images/green-background.jpg\";\nimport MobileIcon from \"../../assets/images/smartphone.png\";\n\nexport default function GetOTP() {\n  const [inputValue, setInputValue] = useState({});\n\n  getTextInputValue = (e, value) => {\n    const { name } = e.target;\n    const inputObj = {};\n    inputObj[name] = value;\n\n\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.curvedContainer}>\n        <ImageBackground\n          style={styles.imageBackground}\n          source={GreenBackground}\n        >\n          <View style={styles.subContainer}>\n            <Image source={MobileIcon} style={styles.image} />\n          </View>\n        </ImageBackground>\n      </View>\n      <View style={styles.contentContainer}>\n        <Text style={styles.headingText}>Phone number verification</Text>\n        <Text style={styles.subText}>\n          Please enter your mobile number to receive One Time Password\n        </Text>\n        <ImageBackground\n          source={GreenBackground}\n          style={{\n            height: 4,\n            backgroundColor: \"green\",\n            width: screenWidth / 4,\n            left: screenWidth / 2.65,\n            paddingTop: 10,\n            alignSelf: \"stretch\",\n          }}\n        />\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.textInput}\n            onChangeText={(e, text) => getTextInputValue(e, text)}\n            name=\"1\"\n            value={inputValue[1]}\n          />\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    width: screenWidth,\n    overflow: \"hidden\",\n  },\n  imageBackground: {\n    width: screenWidth * 2,\n    height: screenHeight / 2,\n    zIndex: -1,\n    elevation: -1,\n  },\n  image: {\n    width: 80,\n    height: 80,\n    top: screenHeight / 8,\n    right: screenWidth / 2,\n    bottom: 0,\n  },\n  curvedContainer: {\n    overflow: \"hidden\",\n    borderBottomStartRadius: screenWidth * 2,\n    borderBottomRightRadius: screenWidth * 2,\n    right: screenWidth / 2,\n    top: -screenHeight / 4,\n  },\n  subContainer: {\n    width: screenWidth * 2,\n    left: screenWidth / 2,\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  contentContainer: {\n    width: screenWidth,\n    color: \"black\",\n    top: -screenHeight / 6,\n    flex: 1,\n    alignItems: \"center\",\n  },\n  headingText: {\n    fontSize: 24,\n    lineHeight: 32,\n  },\n  subText: {\n    padding: 20,\n    fontSize: 16,\n    textAlign: \"center\",\n    lineHeight: 24,\n  },\n  inputContainer: {\n    width: screenWidth,\n    paddingTop: 20\n  },\n  textInput: {\n    height: 40,\n    borderBottomColor: \"gray\",\n    borderBottomWidth: 1,\n    width: screenWidth/14,\n    margin: screenWidth/98\n  },\n});\n"]},"metadata":{},"sourceType":"module"}